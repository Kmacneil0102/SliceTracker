@startuml

package "SliceTrackerSteps" #DDDDDD {


  QTabWidget <|-- SliceTrackerTabWidget
  SliceTrackerStep <.. SliceTrackerTabWidget::steps: has [0..n]

  class SliceTrackerTabWidget {
    + session
    + __init__(session)
    # _createTabs()
    + onCurrentTabChanged(step)
  }

  ModuleWidgetMixin <|-- SliceTrackerStep
  QWidget <|-- SliceTrackerStep

  abstract class SliceTrackerStep {
    + {abstract} NAME: string
    + {abstract} LogicClass: SliceTrackerStepLogic
    .. events ..
    ActivatedEvent: vtk.vtkCommand.UserEvent
    DeactivatedEvent: vtk.vtkCommand.UserEvent
    .. properties ..
    + active: bool
    --
    + session
    + {abstract} setup()
    + {abstract} onLayoutChanged()
    + cleanup()
    + setupConnections()
  }

  abstract class SliceTrackerStepLogic {
    + session
    + {abstract} cleanup()
  }

  class SliceTrackerOverviewStep {
    + onLayoutChanged()
    + trainingsWidget
  }

  class SliceTrackerTrainingStep {
  }

  SliceTrackerTrainingStep <.. SliceTrackerOverviewStep::traningsWidget


  class SliceTrackerSegmentationStep {
    + onLayoutChanged()
  }

  class SliceTrackerZFrameRegistrationStep {
    + onLayoutChanged()
  }

  class SliceTrackerEvaluationStep {
    + onLayoutChanged()
  }


  'SliceTrackerSession "0" --> "*" SliceTrackerStep

  'class OverViewStepLogic
  'class SegmentationStepLogic
  'class ZFrameRegistrationStepLogic
  'class EvaluationStepLogic
  '
  SliceTrackerStepLogic <|-- OverViewStepLogic
  SliceTrackerStepLogic <|-- SegmentationStepLogic
  SliceTrackerStepLogic <|-- ZFrameRegistrationStepLogic
  SliceTrackerStepLogic <|-- EvaluationStepLogic

  SliceTrackerStep <|-- SliceTrackerOverviewStep
  SliceTrackerStep <|-- SliceTrackerSegmentationStep
  SliceTrackerStep <|-- SliceTrackerZFrameRegistrationStep
  SliceTrackerStep <|-- SliceTrackerEvaluationStep

  OverViewStepLogic <.. SliceTrackerOverviewStep: uses
  SegmentationStepLogic <.. SliceTrackerSegmentationStep: uses
  ZFrameRegistrationStepLogic <.. SliceTrackerZFrameRegistrationStep: uses
  EvaluationStepLogic <.. SliceTrackerEvaluationStep: uses

  SliceTrackerStepLogic <.. SliceTrackerStep : uses

  SliceTrackerSession <.. SliceTrackerStep::session : uses
  SliceTrackerSession <.. SliceTrackerStepLogic::session: uses
  SliceTrackerSession <.. SliceTrackerTabWidget::session: uses
}



@enduml